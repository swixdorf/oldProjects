//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button1Click(TObject *Sender)
{
Session1->SessionName		= "bot_program_session";
Database1->SessionName 		= "bot_program_session";
Query1->SessionName 		= "bot_program_session";
Database1->DatabaseName 	= "bot_program";
Query1->DatabaseName		= "bot_program";
Session1->NetFileDir		= ExtractFilePath(Application->ExeName)+"progam\\";
//Session1->PrivateDir		= ExtractFilePath(Application->ExeName)+"progam\\";
Database1->Connected		= true;
Session1->Active			= true;


Session2->SessionName		= "bot_other_session";
Database2->SessionName 		= "bot_other_session";
Query2->SessionName 		= "bot_other_session";
Database2->DatabaseName 	= "bot_other";
Query2->DatabaseName		= "bot_other";
Session2->NetFileDir		= ExtractFilePath(Application->ExeName)+"other\\";
//Session2->PrivateDir		= ExtractFilePath(Application->ExeName)+"other\\";
Database2->Connected		= true;
Session2->Active			= true;

}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button3Click(TObject *Sender)
{
String DbName = "bot_program";
TQuery *Q;
Q = new TQuery(NULL);
Q->DatabaseName= DbName;
Q->SessionName	=	DbName+"_session";
//Q->OnPostError= ErrorLogla;
Q->SQL->Clear();
String Query;
try {
for (int i = 0; i < 10 ; i++) {
Q->Close();
Q->SQL->Clear();
String Query ="select * from codes where (code_time = 30 or code_time = 15)  and DATE(code_load_time) = DATE(DATE_SUB(NOW(),INTERVAL "+IntToStr(i)+" DAY))";
Q->SQL->Add(Query) ;
Q->Open();
Memo1->Lines->Add(Q->RecordCount);

}
Q->Close();
Q->SQL->Clear();
Q->Free();
}catch (...){
Q->Close();
Q->SQL->Clear();
Q->Free();
}
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button2Click(TObject *Sender)
{
String DbName = "bot_other";
TQuery *Q;
Q = new TQuery(NULL);
Q->DatabaseName= DbName;
Q->SessionName	=	DbName+"_session";
//Q->OnPostError= ErrorLogla;
Q->SQL->Clear();
String Query;
try {
for (int i = 0; i < 10 ; i++) {
Q->Close();
Q->SQL->Clear();
String Query ="select * from codes where (code_time = 30 or code_time = 15)  and DATE(code_load_time) = DATE(DATE_SUB(NOW(),INTERVAL "+IntToStr(i)+" DAY))";
Q->SQL->Add(Query) ;
Q->Open();
Memo1->Lines->Add(Q->RecordCount);

}
Q->Close();
Q->SQL->Clear();
Q->Free();
}catch (...){
Q->Close();
Q->SQL->Clear();
Q->Free();
}
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button4Click(TObject *Sender)
{
String DbName = "bot_program";
TQuery *Q;
Q = new TQuery(NULL);
Q->DatabaseName= DbName;
Q->SessionName	=	DbName+"_session";

String DbName2 = "bot_other";
TQuery *Q2;
Q2 = new TQuery(NULL);
Q2->DatabaseName= DbName2;
Q2->SessionName	=	DbName2+"_session";
//Q->OnPostError= ErrorLogla;
Q->SQL->Clear();
Q2->SQL->Clear();
String Query;
try {
Q->Close();
Q->SQL->Clear();
Q2->Close();
Q2->SQL->Clear();
String Query ="select * from codes";
Q->SQL->Add(Query) ;
Q->Open();
Q2->SQL->Add(Query) ;
Q2->Open();
if (Q->RecordCount!=Q2->RecordCount) {
Memo1->Lines->Add("Codes Record Count Not Match, This : "+ IntToStr(Q->RecordCount) + " Other : "+ IntToStr(Q2->RecordCount)  );
}

Q->Close();
Q->SQL->Clear();
Q2->Close();
Q2->SQL->Clear();

Query ="select * from codes where code_active = 1";
Q->SQL->Add(Query) ;
Q->Open();
Q2->SQL->Add(Query) ;
Q2->Open();
if (Q->RecordCount!=Q2->RecordCount) {
Memo1->Lines->Add("Codes Active Count Not Match, This : "+ IntToStr(Q->RecordCount) + " Other : "+ IntToStr(Q2->RecordCount)  );
}












Q->Close();
Q->SQL->Clear();
Q->Free();
Q2->Close();
Q2->SQL->Clear();
Q2->Free();
}catch (...){
Q->Close();
Q->SQL->Clear();
Q->Free();
Q2->Close();
Q2->SQL->Clear();
Q2->Free();
}
}
//---------------------------------------------------------------------------
int dbcount;
	TSession		*mySession[16];
	TDatabase		*myDatabase[16];
	TQuery          *myQuery[16];
void __fastcall TForm1::Button5Click(TObject *Sender)
{
dbcount = dbs->Lines->Count ;


for (int i = 0; i < dbcount; i++) {
mySession[i]					= new TSession(NULL);
myDatabase[i]					= new TDatabase(NULL);
myQuery[i]						= new TQuery(NULL);
mySession[i]->SessionName		= dbs->Lines->Strings[i]+"+_session" ;
myDatabase[i]->SessionName		= dbs->Lines->Strings[i]+"+_session" ;
myQuery[i]->SessionName			= dbs->Lines->Strings[i]+"+_session" ;
myDatabase[i]->DatabaseName 	= dbs->Lines->Strings[i];
myQuery[i]->DatabaseName		= dbs->Lines->Strings[i];
mySession[i]->NetFileDir		= ExtractFilePath(Application->ExeName)+"sessions\\"+IntToStr(i);


myDatabase[i]->BeforeConnect	= DatabaseBeforeConnect;
myDatabase[i]->AfterConnect		= DatabaseAfterConnect;
myDatabase[i]->BeforeDisconnect	= DatabaseBeforeDisconnect;
myDatabase[i]->AfterDisconnect	= DatabaseAfterDisconnect;

myDatabase[i]->Connected		= true;
mySession[i]->Active			= true;
}

}
//---------------------------------------------------------------------------


void __fastcall TForm1::DatabaseBeforeConnect(TObject *Sender)
{
TDatabase		*DB;
DB = dynamic_cast<TDatabase*>(Sender);
Memo1->Lines->Add(DB->SessionName);
Memo1->Lines->Add("Connecting...");
}
//---------------------------------------------------------------------------

void __fastcall TForm1::DatabaseAfterConnect(TObject *Sender)
{
TDatabase		*DB;
DB = dynamic_cast<TDatabase*>(Sender);
Memo1->Lines->Add(DB->SessionName);
Memo1->Lines->Add("Connected...");
}
//---------------------------------------------------------------------------

void __fastcall TForm1::DatabaseAfterDisconnect(TObject *Sender)
{
TDatabase		*DB;
DB = dynamic_cast<TDatabase*>(Sender);
Memo1->Lines->Add(DB->SessionName);
Memo1->Lines->Add("DisConnected...");
}
//---------------------------------------------------------------------------

void __fastcall TForm1::DatabaseBeforeDisconnect(TObject *Sender)
{
TDatabase		*DB;
DB = dynamic_cast<TDatabase*>(Sender);
Memo1->Lines->Add(DB->SessionName);
Memo1->Lines->Add("DisConnecting...");
}
//---------------------------------------------------------------------------

